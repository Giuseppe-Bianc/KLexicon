plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.8.20'
    id 'org.jetbrains.kotlinx.benchmark' version '0.4.7'
    id 'org.jetbrains.kotlin.plugin.allopen' version '1.8.20'
}

allOpen {
    annotation("org.openjdk.jmh.annotations.State")
}

group = 'org.dersbian'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}


dependencies {
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.5'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.20'
    implementation 'org.openjdk.jmh:jmh-core:1.35'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.14.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.7.0-Beta'
    implementation 'org.jetbrains.kotlinx:kotlinx-benchmark-runtime-jvm:0.4.7'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'commons-codec:commons-codec:1.15'
    implementation 'org.jetbrains.kotlinx:kotlinx-cli:0.3.5'
    testImplementation 'org.jetbrains.kotlin:kotlin-test:1.8.20'
}


// Apply a specific Java toolchain to ease working on different environments.
kotlin {
    jvmToolchain(17)
}

benchmark {
    configurations {
        named("main") {
            warmups = 15
            iterations = 100
            iterationTime = 1
        }
    }
    targets {
        register("main") {
            jmhVersion = "1.35"
        }
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.dersbian.klexicon.AppKt'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
